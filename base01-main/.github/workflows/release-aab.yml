name: Android Release AAB
on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    # <- Copiamos os secrets p/ env e usamos env.* nos IFs
    env:
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # Baixa o Gradle 8.9 oficial, gera o wrapper e valida
      - name: Ensure Gradle Wrapper (8.9)
        run: |
          set -e
          GRADLE_VERSION=8.9
          curl -fL -o gradle.zip "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip"
          unzip -q gradle.zip -d "$HOME/gradle"
          export GRADLE_HOME="$HOME/gradle/gradle-${GRADLE_VERSION}"
          export PATH="$GRADLE_HOME/bin:$PATH"
          gradle --version
          # gera os arquivos do wrapper dentro do repo
          gradle wrapper --gradle-version ${GRADLE_VERSION}
          chmod +x ./gradlew
          ./gradlew --version

      # Só roda se o secret do keystore existe
      - name: Decode keystore (if provided)
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p app/release
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > app/release/upload.keystore
          ls -l app/release

      # Só cria signing.properties se TODOS os 3 secrets foram informados
      - name: Create signing.properties (if provided)
        if: ${{ env.ANDROID_KEYSTORE_PASSWORD != '' && env.ANDROID_KEY_ALIAS != '' && env.ANDROID_KEY_PASSWORD != '' }}
        run: |
          cat > app/signing.properties <<'EOF'
          storeFile=app/release/upload.keystore
          storePassword=${ANDROID_KEYSTORE_PASSWORD}
          keyAlias=${ANDROID_KEY_ALIAS}
          keyPassword=${ANDROID_KEY_PASSWORD}
          EOF
          echo "signing.properties created."

      - name: Build Release AAB
        run: ./gradlew --no-daemon clean bundleRelease

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: app/build/outputs/bundle/release/*.aab

      # (opcional) Se der erro, tenta anexar logs do Gradle
      - name: Upload Gradle reports on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-reports
          path: |
            **/build/reports/**/*
            **/build/outputs/**/*
          if-no-files-found: ignore
